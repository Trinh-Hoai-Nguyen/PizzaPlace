@page "/"
@using PizzaPlace.Shared
@inject IMenuService MenuService
@inject IOrderService orderService

<PageTitle>Index</PageTitle>

<h1>Chào bạn!</h1>
Chào mừng bạn đến với website của mình
<!-- Menu -->
@*<h1>Lựa chọn về pizzas</h1>*@
@*<center><h1>Lựa chọn về pizzas</h1></center>
<br>
@foreach(var Pizza in State.Menu.Pizzas)
{
   <div class="row">
        <div class="col">
            @Pizza.Name
        </div>
        <div class="col text-right">
            @($"{Pizza.Price:0.00}")
        </div>
        <div class="col"></div>
        <div class="col">
            <img src="@SpicinessImage(Pizza.Spiciness)"
            alt="@Pizza.Spiciness" />
        </div>
        <div class="col">
            <button class="btn btn-success pl-4 pr-4" 
            @onclick="@(()=> AddToBasket(Pizza))">
                Thêm
            </button>
        </div>
    </div>
}*@
<!-- End menu-->

<!--Shopping Basket-->
@*@if(State.Basket.Orders.Any()){
    <br>
        <h1 class="">Lựa chọn hiện tại của bạn</h1>
        @foreach(var (pizza, pos) in State.Basket.Orders.Select(
            (id, pos) => (State.Menu.GetPizza(id), pos))){
                <div class="row mb-2">
                    <div class="col">
                        @pizza.Name
                    </div>
                    <div class="col text-right">
                        @($"{pizza.Price:0.00}")
                    </div>
                    <div class="col"></div>
                    <div class="col"></div>
                    <div class="col">
                        <button class="btn btn-danger"
                        @onclick="@(() => RemoveFromBasket(pos))">
                        Xóa
                    </button>
                    </div>
                </div>
            }
            <div class="row">
                <div class="col"></div>
                <div class="col"><hr /></div>
                <div class="col"></div>
                <div class="col"></div>
            </div>
            <div class="row">
                <div class="col"> Tổng tiền:</div>
                <div class="col text-right font-weight-bold">
                    @($"{State.TotalPrice:0.00}")</div>
                <div class="col"></div>
                <div class="col"></div>
                <div class="col"></div>
            </div>
    }*@
<!-- End shopping basket-->

<!-- Customer entry-->
@*<br>
    <h1>Please enter your details below</h1>
<fieldset>
    <div class="row mb-2">
        <label class="col-2" for="name">Name:</label>
        <input class="col-6" id="name"
        @bind="State.Basket.Customer.Name"/>
    </div>
    <br>
    <div class="row mb-2">
        <label class="col-2" for="street">Street:</label>
        <input class="col-6" id="street"
        @bind="State.Basket.Customer.Street"/>
    </div>
    <br>
    <div class="row mb-2">
        <label class="col-2" for="city">City:</label>
        <input class="col-6" id="city"
        @bind="State.Basket.Customer.City"/>
    </div>
    <button @onclick="PlaceOrder">Checkout</button>
</fieldset>*@
<!-- End customer entry -->



<!-- NEW Customer entry-->
@* <br>
    <h1 class="mt-2 mb-2">Please enter your details below</h1>
<EditForm Model="@State.Basket.Customer"
        OnInvalidSubmit="PlaceOrder">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
    <fieldset>
        <div class="row mb-2">
            <label class="col-2" for="name">Name:</label>
            <InputText class="form-control col-6"
            @bind-Value="@State.Basket.Customer.Name"/>
        </div>
        <div class="row mb-2">
             <div class="col-6 offset-2">
            <ValidationMessage
                For="@(()=> State.Basket.Customer.Name)"/>
            </div>
        </div>
         <div class="row mb-2">
            <label class="col-2" for="street">Street:</label>
            <InputText class="form-control col-6"
            @bind-Value="@State.Basket.Customer.Street"/>
        </div>
        <div class="row mb-2">
             <div class="col-6 offset-2">
            <ValidationMessage
                For="@(()=> State.Basket.Customer.Street)"/>
            </div>
        </div>
         <div class="row mb-2">
            <label class="col-2" for="city">City:</label>
            <InputText class="form-control col-6"
            @bind-Value="@State.Basket.Customer.City"/>
        </div>
        <div class="row mb-2">
             <div class="col-6 offset-2">
            <ValidationMessage
                For="@(()=> State.Basket.Customer.City)"/>
            </div>
        </div>
         <div class="row mb-2">
            <button class="mx-auto w-25 btn btn-success"
            @onclick="PlaceOrder">Checkout</button>
        </div>
    </fieldset>
    </EditForm>*@
    <!-- End NEW ustomer entry-->

    <!-- Menu-->
<br>
    <h1>Menu mới</h1>
    <br>
    <PizzaList Title="Lựa chọn về pizza"
        Items="@State.Menu.Pizzas"
        ButtonTitle="Thêm"
        ButtonClass="btn btn-success pl-4 pr-4"
        Selected="@AddToBasket"/>
        <br>
<!-- End menu-->

<!-- Shopping Basket -->
    <ShoppingBasket Orders="@State.Basket.Orders"
    GetPizzaFromId="@State.Menu.GetPizza"
    Selected="@RemoveFromBasket"/>
<!-- End shopping basket -->

<!-- Customer entry-->
@*<CustomerEntry Title ="Please enter your details below"
    Customer="@State.Basket.Customer"
    ButtonTitle="Checkout"
    ButtonClass="mx-auto w-25 btn btn-success"
    ValidSubmit="PlaceOrder"
       />*@
<!-- End customer entry-->

<!-- Customer entry-->
<br>
<CustomerEntry Title="Vui lòng nhập thông tin chi tiết của bạn"
@bind-Customer="@State.Basket.Customer"
ButtonTitle="Hoàn tất thủ tục"
ButtonClass="mx-auto w-25 btn btn-success"
ValidSubmit="PlaceOrder"/>
<!-- End customer entry -->
@State.ToJson()
@code{
    private State State { get; } = new State();
    //protected override void OnInitialized()
    //{
    //    State.Menu.Add(new Pizza(1, "Pepperoni", 8.99M, Spiciness.Spicy));
    //    State.Menu.Add(new Pizza(2, "Margarita", 7.99M, Spiciness.None));
    //    State.Menu.Add(new Pizza(3, "Diabolo", 9.99M, Spiciness.Hot));
    //}
    protected override async Task OnInitializedAsync()
    {
        Menu menu = await MenuService.GetMenu();
        foreach(Pizza pizza in menu.Pizzas)
        {
            State.Menu.Add(pizza);
        }
    }
    private string SpicinessImage(Spiciness spiciness)
    => $"images/{spiciness.ToString().ToLower()}.png";

    private void AddToBasket(Pizza pizza)
    => State.Basket.Add(pizza.Id);

    private void RemoveFromBasket(int pos)
    => State.Basket.RemoveAt(pos);

    //private void PlaceOrder()
    //{
    //    Console.WriteLine("Placing order");
    //}
    private async Task PlaceOrder()
    {
        await orderService.PlaceOrder (State.Basket);
    }
}

